#!/bin/bash
#thanks http://www.flvcd.com
#example: vsplay http://v.youku.com/v_show/id_XMzAwMjI3MDI0.html
# fmt could be: 'normal', 'high', 'super' or 'real'(without the quotation mark), generally denoting 260p, 360p, 480p and the original image respectively, yet depending on the video source defaults though. Leaving it blank leads to the default video quality provided.
#wurl=$(urlencode "$1")
wurl=$1
fmt=$2
UA="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)"
parser="http://www.flvcd.com/parse.php?flag=&format=$fmt&kw=$wurl&sbt=%BF%AA%CA%BCGO%21"
#from http://forum.ubuntu.org.cn/viewtopic.php?f=73&t=344921
get_m3u() {
   line=`cat /tmp/dump |wc -l`
   m3u_start=`grep "m3u" /tmp/dump -n`
   start_line=${m3u_start%%:*}
   m3u_end=`grep "M3U" /tmp/dump -n`
   end_line=${m3u_end%%:*}
   cut_line=$(($line-$end_line+2))

   tac /tmp/dump |sed -e "1,$cut_line d" |tac >/tmp/url

   sed -i "1,$start_line d" /tmp/url

   sed -i '/1/s/<input type="hidden" name="inf" value="//g' /tmp/url
}

get_url() {
   grep "<U>" /tmp/dump > /tmp/url
   sed -i 's/<U>//g' /tmp/url
}

get_title() {
grep "<N>" /tmp/dump >/tmp/title
sed -i 's/<N>//g' /tmp/title
file="`sed -n '1p' /tmp/title`"
}

get_playlist() {
   for ((i=1; i<=$u_length; ++i))
      do
            ttl=`sed -n "$i p" /tmp/title`
            sed -i "$((2*i-1)) i #EXTINF:PART $i in $u_length, $ttl" /tmp/url
      done
   mv /tmp/url /tmp/play.m3u
   sed -i "1i#EXTM3U" /tmp/play.m3u
}

play() {
if [ -s /tmp/play.m3u ]; then
   mv /tmp/play.m3u /tmp/playlist.title
   notify-send "playing $file"
   mplayer -playlist /tmp/playlist.title
elif [ -s /tmp/url ]; then
   mv /tmp/url /tmp/playlist
   mplayer -playlist /tmp/playlist
   #mplayer -cache 51200 -cache-min 1 -playlist /tmp/playlist
fi


}

if ! wget $parser -q -U "$UA" -O /tmp/dump; then
   
   notify-send "cannot get parser, exit"
   exit 0
fi

iconv -f gbk -t utf-8 /tmp/dump -o /tmp/dump


if [ "`grep m3u /tmp/dump`" != "" ] ; then

   get_m3u
else
   
   get_url
fi

get_title

u_length=`cat /tmp/url |wc -l`
t_length=`cat /tmp/title |wc -l`

if [ $u_length -eq 0 ]; then
   notify-send "stream url is null, exit"
   exit 0
fi

if [ $u_length -eq $t_length ]; then
   get_playlist
else
   notify-send "u_length and t_length not match, generated with no titles. "
fi

rm /tmp/title /tmp/dump

if ! play ; then
   echo "can not play, check the url's in /tmp/playlist or /tmp/playlist.title"
fi
